{"version":3,"sources":["state/dataReducer.js","components/Chart.js","components/App.js","state/store.js","index.js"],"names":["initialState","events","error","setError","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","type","setTimeout","stop","_x","apply","this","arguments","baseUrl","process","API_URL","dataReducer","state","length","undefined","action","objectSpread","concat","toConsumableArray","Chart","series","name","data","props","sensor1","map","s","x","date","y","sensor2","sensor3","sensor4","react_default","createElement","react_apexcharts_min_default","options","title","text","align","margin","style","fontSize","yaxis","seriesName","axisTicks","show","axisBorder","color","labels","tooltip","enabled","fixed","position","offsetY","offsetX","legend","horizontalAlign","showForNullSeries","width","Component","ConnectedChart","connect","e","App","getAllEvents","_this","handleFetchNewDataButtonClick","_callee2","_context2","fetchNewData","handleGetEventsButtonClick","_ref2","_callee3","_context3","className","Button_default","variant","size","onClick","components_Chart","mapDispatchToProps","axios","get","sent","abrupt","t0","_x2","_ref3","_x3","ConnectedApp","reducer","combineReducers","store","createStore","applyMiddleware","thunk","render","ReactDOM","es","components_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.247d84ff.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst initialState = { events: [], error: null };\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'SET_ALL_EVENTS':\n    return {\n      ...state,\n      events: action.events\n    };\n\n  case 'SET_NEW_EVENT':\n    return {\n      ...state,\n      events: [...state.events, action.events]\n    };\n\n  case 'SET_ERROR':\n    return {\n      ...state,\n      error: action.error\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport const setError = (error) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'SET_ERROR',\n      error\n    });\n\n    setTimeout(() => {\n      dispatch({\n        type: 'SET_ERROR',\n        error: null\n      }\n      );\n    }, 4000);\n  };\n};\n\nconst baseUrl = process.env.API_URL || 'http://localhost:3000';\n\nexport const fetchNewData = () => {\n  return async (dispatch) => {\n    try {\n      const data = await axios.get(`${baseUrl}/api/fetch_new_data`);\n\n      if (data.data === 'event already saved') {\n        setError('event already saved');\n        return;\n      }\n\n      dispatch({\n        type: 'SET_NEW_EVENT',\n        events: data.data\n      });\n    } catch (err) {\n      setError(err);\n    }\n  };\n};\n\nexport const getAllEvents = () => {\n  return async (dispatch) => {\n    try {\n      const data = await axios.get(`${baseUrl}/api/get_events`);\n\n      dispatch({\n        type: 'SET_ALL_EVENTS',\n        events: data.data\n      });\n    } catch (err) {\n      setError(err);\n    }\n  };\n};\n\nexport default dataReducer;","import React, { Component } from 'react';\nimport ApexChart from 'react-apexcharts';\nimport { connect } from 'react-redux';\n\nclass Chart extends Component {\n  render() {\n    const options = {\n      title: {\n        text: 'Events',\n        align: 'center',\n        margin: 20,\n        style: {\n          fontSize:  '20px'\n        }\n      },\n      yaxis: {\n        seriesName: 'events',\n        axisTicks: {\n          show: true,\n        },\n        axisBorder: {\n          show: true,\n          color: '#662E9B',\n        },\n        labels: {\n          style: {\n            color: '#662E9B',\n          }\n        },\n        title: {\n          // text: 'events',\n          style: {\n            color: '#662E9B',\n          }\n        },\n        tooltip: {\n          enabled: true\n        } },\n      tooltip: {\n        fixed: {\n          enabled: true,\n          position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n          offsetY: 30,\n          offsetX: 60\n        },\n        // x: { formatter: (seriesName) => 'Year: ' + seriesName }\n      },\n      legend: {\n        position: 'top',\n        horizontalAlign: 'right',\n        offsetX: 40,\n        showForNullSeries: false,\n      }\n    };\n\n    const series = [\n      {\n        name: 'Sensor 1',\n        type: 'line',\n        data: (this.props.sensor1 ? this.props.sensor1.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 2',\n        type: 'line',\n        data: (this.props.sensor2 ? this.props.sensor2.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 3',\n        type: 'line',\n        data: (this.props.sensor3 ? this.props.sensor3.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 4',\n        type: 'line',\n        data: (this.props.sensor4 ? this.props.sensor4.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      }];\n\n    return (\n      <div>\n        <ApexChart options={options} series={series} type='line' width='700px' />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sensor1: state.data.events.map(e => {\n      return {\n        date: e.data.date,\n        data: e.data.sensor1\n      };\n    }),\n    sensor2: state.data.events.map(e => {\n      return {\n        date: e.data.date,\n        data: e.data.sensor2\n      };\n    }),\n    sensor3: state.data.events.map(e => {\n      return {\n        date: e.data.date,\n        data: e.data.sensor3\n      };\n    }),\n    sensor4: state.data.events.map(e => {\n      return {\n        date: e.data.date,\n        data: e.data.sensor4\n      };\n    })\n  };\n};\n\nconst ConnectedChart = connect(mapStateToProps)(Chart);\n\nexport default ConnectedChart;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { fetchNewData, getAllEvents } from '../state/dataReducer';\nimport Chart from './Chart';\n\nclass App extends Component {\n\n  async componentDidMount() {\n    await this.props.getAllEvents();\n  }\n\n  render() {\n\n    const handleFetchNewDataButtonClick = async () => {\n      this.props.fetchNewData();\n    };\n\n    const handleGetEventsButtonClick = async () => {\n      this.props.getAllEvents();\n    };\n\n    return (\n      <div className='App'>\n        <h1>Moiccu</h1>\n\n        <Button className='fetch-new-event-button' variant='outlined' size='large' onClick={handleFetchNewDataButtonClick}>Fetch a new data point</Button>\n        <Button variant='outlined' size='large' onClick={handleGetEventsButtonClick}>Get all events</Button>\n\n        <h1>Charts</h1>\n\n        <Chart />\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchNewData,\n  getAllEvents\n};\n\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default ConnectedApp;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport dataReducer from './dataReducer';\n\nconst reducer = combineReducers({\n  data: dataReducer\n})\n\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'typeface-roboto';\nimport App from './components/App';\nimport store from './state/store';\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n};\n\nrender();\nstore.subscribe(render);"],"sourceRoot":""}