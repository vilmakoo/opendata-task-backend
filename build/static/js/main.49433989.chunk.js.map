{"version":3,"sources":["state/dataReducer.js","components/Chart.js","components/App.js","state/store.js","index.js"],"names":["initialState","dataPoints","fetchTime","error","setError","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","type","setTimeout","stop","_x","apply","this","arguments","dataReducer","state","length","undefined","action","objectSpread","concat","toConsumableArray","Date","Chart","options","yaxis","seriesName","axisTicks","show","axisBorder","color","labels","style","tooltip","enabled","xaxis","tickPlacement","formatter","value","date","day","getUTCDate","month","getMonth","hours","getHours","slice","minutes","getMinutes","parseTime","fixed","position","offsetY","offsetX","legend","horizontalAlign","showForNullSeries","series","name","data","props","sensor1","map","s","x","y","sensor2","sensor3","sensor4","react_default","createElement","react_apexcharts_min_default","className","width","Component","ConnectedChart","connect","e","App","getAllDataPoints","_this","handleFetchNewDataButtonClick","_callee2","_context2","fetchNewData","handleGetDataPointsButtonClick","_ref2","_callee3","_context3","Fragment","CssBaseline_default","Typography_default","variant","gutterBottom","paragraph","Button_default","size","onClick","components_Chart","mapDispatchToProps","resp","axios","get","sent","abrupt","t0","_x2","_ref3","d","_x3","ConnectedApp","reducer","combineReducers","store","createStore","applyMiddleware","thunk","render","ReactDOM","es","components_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.49433989.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst initialState = { dataPoints: [], fetchTime: null, error: null };\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'SET_ALL_DATA_POINTS':\n    return {\n      ...state,\n      dataPoints: action.dataPoints\n    };\n\n  case 'SET_NEW_DATA_POINT':\n    return {\n      ...state,\n      dataPoints: [...state.dataPoints, action.dataPoints]\n    };\n\n  case 'SET_ERROR':\n    return {\n      ...state,\n      error: action.error\n    };\n\n  case 'SET_FETCH_TIME':\n    return {\n      ...state,\n      fetchTime: new Date()\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport const setError = (error) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'SET_ERROR',\n      error\n    });\n\n    setTimeout(() => {\n      dispatch({\n        type: 'SET_ERROR',\n        error: null\n      }\n      );\n    }, 4000);\n  };\n};\n\n\nexport const fetchNewData = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await axios.get('/api/fetch_new_data');\n\n      dispatch({\n        type: 'SET_FETCH_TIME'\n      });\n\n      if (resp.data === 'data point already saved') {\n        setError('data point already saved');\n        return;\n      }\n\n      dispatch({\n        type: 'SET_NEW_DATA_POINT',\n        dataPoints: resp.data.data // TODO: parsi date kivaan muotoon\n      });\n    } catch (err) {\n      setError(err);\n    }\n  };\n};\n\nexport const getAllDataPoints = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await axios.get('/api/get_data_points');\n\n      dispatch({\n        type: 'SET_FETCH_TIME'\n      });\n      dispatch({\n        type: 'SET_ALL_DATA_POINTS',\n        dataPoints: resp.data.map(d => d.data)\n      },);\n    } catch (err) {\n      setError(err);\n    }\n  };\n};\n\nexport default dataReducer;","import React, { Component } from 'react';\nimport ApexChart from 'react-apexcharts';\nimport { connect } from 'react-redux';\n\nclass Chart extends Component {\n  render() {\n    const parseTime = (date) => {\n      if (!date) {\n        return '';\n      }\n      const day = date.getUTCDate();\n      const month = date.getMonth() + 1;\n      const hours = ('0' + date.getHours()).slice(-2);\n      const minutes = ('0' + date.getMinutes()).slice(-2);\n\n      return `${day}.${month}. ${hours}:${minutes}`;\n    };\n\n    const options = {\n      yaxis: {\n        seriesName: 'dataPoints',\n        axisTicks: {\n          show: true,\n        },\n        axisBorder: {\n          show: true,\n          color: '#662E9B',\n        },\n        labels: {\n          style: {\n            color: '#662E9B',\n          }\n        },\n        tooltip: {\n          enabled: true\n        }\n      },\n      xaxis: {\n        axisTicks: {\n          show: false\n        },\n        tickPlacement: 'on',\n        labels: {\n          formatter: (value) => {\n            if (typeof(value) === 'number') {\n              return value;\n            }\n            return parseTime(new Date(value));\n          }\n        }\n      },\n      tooltip: {\n        fixed: {\n          enabled: true,\n          position: 'topLeft',\n          offsetY: 30,\n          offsetX: 60\n        },\n      },\n      legend: {\n        position: 'top',\n        horizontalAlign: 'left',\n        offsetX: 40,\n        showForNullSeries: false,\n      }\n    };\n\n    const series = [\n      {\n        name: 'Sensor 1',\n        type: 'line',\n        data: (this.props.sensor1 ? this.props.sensor1.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 2',\n        type: 'line',\n        data: (this.props.sensor2 ? this.props.sensor2.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 3',\n        type: 'line',\n        data: (this.props.sensor3 ? this.props.sensor3.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 4',\n        type: 'line',\n        data: (this.props.sensor4 ? this.props.sensor4.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      }];\n\n    return (\n      <div>\n        <ApexChart className='chart' options={options} series={series} type='line' width='700px' />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sensor1: state.data.dataPoints.map(e => {\n      return {\n        date: e.date,\n        data: e.sensor1\n      };\n    }),\n    sensor2: state.data.dataPoints.map(e => {\n      return {\n        date: e.date,\n        data: e.sensor2\n      };\n    }),\n    sensor3: state.data.dataPoints.map(e => {\n      return {\n        date: e.date,\n        data: e.sensor3\n      };\n    }),\n    sensor4: state.data.dataPoints.map(e => {\n      return {\n        date: e.date,\n        data: e.sensor4\n      };\n    })\n  };\n};\n\nconst ConnectedChart = connect(mapStateToProps)(Chart);\n\nexport default ConnectedChart;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { fetchNewData, getAllDataPoints } from '../state/dataReducer';\nimport Chart from './Chart';\n\nclass App extends Component {\n\n  async componentDidMount() {\n    await this.props.getAllDataPoints();\n  }\n\n  render() {\n    const handleFetchNewDataButtonClick = async () => {\n      this.props.fetchNewData();\n    };\n\n    const handleGetDataPointsButtonClick = async () => {\n      this.props.getAllDataPoints();\n    };\n\n    return (\n      <React.Fragment>\n        <CssBaseline>\n          <div className='app'>\n            <Typography variant='h1' color='primary' gutterBottom={true}>\n              Data visualization\n            </Typography>\n\n            <Typography variant='h4' paragraph color='textPrimary'>\n              App for visualizing data.\n            </Typography>\n            <Typography variant='h5' paragraph color='textPrimary'>\n              The server will fetch a new data point hourly<br />\n              from a given API and save it to the database.<br />\n              The data points are visualized on the chart below.\n            </Typography>\n\n            <Button className='button' variant='outlined' color='primary' size='large' onClick={ handleGetDataPointsButtonClick }>Update the chart</Button>\n            <Button className='button' variant='outlined' color='primary' size='large' onClick={ handleFetchNewDataButtonClick }>Fetch a new data point manually</Button>\n\n            <div className='chart-container'>\n              <Typography variant='h2' color='primary' gutterBottom={true}>\n                The Chart\n              </Typography>\n            </div>\n\n            <Chart />\n          </div>\n        </CssBaseline>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    fetchTime: state.data.fetchTime\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchNewData,\n  getAllDataPoints\n};\n\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default ConnectedApp;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport dataReducer from './dataReducer';\n\nconst reducer = combineReducers({\n  data: dataReducer\n});\n\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'typeface-roboto';\nimport App from './components/App';\nimport store from './state/store';\nimport './styles/index.scss';\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n};\n\nrender();\nstore.subscribe(render);"],"sourceRoot":""}