{"version":3,"sources":["state/dataReducer.js","components/Chart.js","components/App.js","state/store.js","index.js"],"names":["initialState","events","error","morot","setError","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","type","setTimeout","stop","_x","apply","this","arguments","dataReducer","state","length","undefined","action","objectSpread","concat","toConsumableArray","Chart","series","name","data","props","sensor1","map","s","x","date","y","sensor2","sensor3","sensor4","react_default","createElement","react_apexcharts_min_default","options","title","text","align","margin","style","fontSize","yaxis","seriesName","axisTicks","show","axisBorder","color","labels","tooltip","enabled","fixed","position","offsetY","offsetX","legend","horizontalAlign","showForNullSeries","width","Component","ConnectedChart","connect","e","App","getAllEvents","_this","handleFetchNewDataButtonClick","_callee2","_context2","fetchNewData","handleGetEventsButtonClick","_ref2","_callee3","_context3","setInterval","addMoro","list","m","i","key","className","Button_default","variant","size","onClick","components_Chart","mapDispatchToProps","axios","get","sent","console","log","abrupt","t0","_x2","_ref3","_x3","ConnectedApp","reducer","combineReducers","store","createStore","applyMiddleware","thunk","render","ReactDOM","es","components_App","document","getElementById","subscribe"],"mappings":"uQAEMA,EAAe,CAAEC,OAAQ,GAAIC,MAAO,KAAMC,MAAO,IAuC1CC,EAAW,SAACF,GACvB,sBAAAG,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAOC,GAAP,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACLJ,EAAS,CACPK,KAAM,YACNf,UAGFgB,WAAW,WACTN,EAAS,CACPK,KAAM,YACNf,MAAO,QAGR,KAZE,wBAAAY,EAAAK,SAAAR,MAAP,gBAAAS,GAAA,OAAAf,EAAAgB,MAAAC,KAAAC,YAAA,IAqDaC,EA3FK,WAAkC,IAAjCC,EAAiCF,UAAAG,OAAA,QAAAC,IAAAJ,UAAA,GAAAA,UAAA,GAAzBvB,EAAc4B,EAAWL,UAAAG,OAAA,EAAAH,UAAA,QAAAI,EACpD,OAAQC,EAAOX,MACf,IAAK,iBACH,OAAOX,OAAAuB,EAAA,EAAAvB,CAAA,GACFmB,EADL,CAEExB,OAAQ2B,EAAO3B,SAGnB,IAAK,gBACH,OAAOK,OAAAuB,EAAA,EAAAvB,CAAA,GACFmB,EADL,CAEExB,OAAM,GAAA6B,OAAAxB,OAAAyB,EAAA,EAAAzB,CAAMmB,EAAMxB,QAAZ,CAAoB2B,EAAO3B,WAGrC,IAAK,YACH,OAAOK,OAAAuB,EAAA,EAAAvB,CAAA,GACFmB,EADL,CAEEvB,MAAO0B,EAAO1B,QAGlB,IAAK,WACH,OAAOI,OAAAuB,EAAA,EAAAvB,CAAA,GACFmB,EADL,CAEEtB,MAAK,GAAA2B,OAAAxB,OAAAyB,EAAA,EAAAzB,CAAMmB,EAAMtB,OAAZ,CAAmB,WAG5B,QACE,OAAOsB,qBC3BLO,mLAEF,IAkDMC,EAAS,CACb,CACEC,KAAM,WACNjB,KAAM,OACNkB,KAAOb,KAAKc,MAAMC,QAAUf,KAAKc,MAAMC,QAAQC,IAAI,SAAAC,GACjD,MAAO,CACLC,EAAGD,EAAEE,KACLC,EAAGH,EAAEJ,QAEJ,IAEP,CACED,KAAM,WACNjB,KAAM,OACNkB,KAAOb,KAAKc,MAAMO,QAAUrB,KAAKc,MAAMO,QAAQL,IAAI,SAAAC,GACjD,MAAO,CACLC,EAAGD,EAAEE,KACLC,EAAGH,EAAEJ,QAEJ,IAEP,CACED,KAAM,WACNjB,KAAM,OACNkB,KAAOb,KAAKc,MAAMQ,QAAUtB,KAAKc,MAAMQ,QAAQN,IAAI,SAAAC,GACjD,MAAO,CACLC,EAAGD,EAAEE,KACLC,EAAGH,EAAEJ,QAEJ,IAEP,CACED,KAAM,WACNjB,KAAM,OACNkB,KAAOb,KAAKc,MAAMS,QAAUvB,KAAKc,MAAMS,QAAQP,IAAI,SAAAC,GACjD,MAAO,CACLC,EAAGD,EAAEE,KACLC,EAAGH,EAAEJ,QAEJ,KAGT,OACEW,EAAArC,EAAAsC,cAAA,WACED,EAAArC,EAAAsC,cAACC,EAAAvC,EAAD,CAAWwC,QA9FC,CACdC,MAAO,CACLC,KAAM,SACNC,MAAO,SACPC,OAAQ,GACRC,MAAO,CACLC,SAAW,SAGfC,MAAO,CACLC,WAAY,SACZC,UAAW,CACTC,MAAM,GAERC,WAAY,CACVD,MAAM,EACNE,MAAO,WAETC,OAAQ,CACNR,MAAO,CACLO,MAAO,YAGXE,QAAS,CACPC,SAAS,IASbD,QAAS,CACPE,MAAO,CACLD,SAAS,EACTE,SAAU,UACVC,QAAS,GACTC,QAAS,KAIbC,OAAQ,CACNH,SAAU,MACVI,gBAAiB,QACjBF,QAAS,GACTG,mBAAmB,IAgDUtC,OAAQA,EAAQhB,KAAK,OAAOuD,MAAM,kBAhGnDC,aAqILC,EAFQC,YA7BC,SAAClD,GACvB,MAAO,CACLY,QAASZ,EAAMU,KAAKlC,OAAOqC,IAAI,SAAAsC,GAC7B,MAAO,CACLnC,KAAMmC,EAAEzC,KAAKM,KACbN,KAAMyC,EAAEzC,KAAKE,WAGjBM,QAASlB,EAAMU,KAAKlC,OAAOqC,IAAI,SAAAsC,GAC7B,MAAO,CACLnC,KAAMmC,EAAEzC,KAAKM,KACbN,KAAMyC,EAAEzC,KAAKQ,WAGjBC,QAASnB,EAAMU,KAAKlC,OAAOqC,IAAI,SAAAsC,GAC7B,MAAO,CACLnC,KAAMmC,EAAEzC,KAAKM,KACbN,KAAMyC,EAAEzC,KAAKS,WAGjBC,QAASpB,EAAMU,KAAKlC,OAAOqC,IAAI,SAAAsC,GAC7B,MAAO,CACLnC,KAAMmC,EAAEzC,KAAKM,KACbN,KAAMyC,EAAEzC,KAAKU,aAME8B,CAAyB3C,GCjI1C6C,sTAGIvD,KAAKc,MAAM0C,kJAGV,IAAAC,EAAAzD,KAID0D,EAA6B,eAAA3E,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAuE,IAAA,OAAAzE,EAAAC,EAAAI,KAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,OACpC+D,EAAK3C,MAAM+C,eADyB,wBAAAD,EAAA/D,SAAA8D,MAAH,yBAAA5E,EAAAgB,MAAAC,KAAAC,YAAA,GAI7B6D,EAA0B,eAAAC,EAAA/E,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA4E,IAAA,OAAA9E,EAAAC,EAAAI,KAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,OACjC+D,EAAK3C,MAAM0C,eADsB,wBAAAS,EAAApE,SAAAmE,MAAH,yBAAAD,EAAAhE,MAAAC,KAAAC,YAAA,GAIhCiE,YAAY,WACVT,EAAK3C,MAAMqD,WACV,KACH,IAAMC,EACJ5C,EAAArC,EAAAsC,cAAA,UACGzB,KAAKc,MAAMjC,MAAMmC,IAAI,SAACqD,EAAEC,GAAH,OAAU9C,EAAArC,EAAAsC,cAAA,MAAI8C,IAAKD,GAAID,MAIjD,OACE7C,EAAArC,EAAAsC,cAAA,OAAK+C,UAAU,OACbhD,EAAArC,EAAAsC,cAAA,oBACC2C,EAED5C,EAAArC,EAAAsC,cAACgD,EAAAtF,EAAD,CAAQqF,UAAU,yBAAyBE,QAAQ,WAAWC,KAAK,QAAQC,QAASlB,GAApF,0BACAlC,EAAArC,EAAAsC,cAACgD,EAAAtF,EAAD,CAAQuF,QAAQ,WAAWC,KAAK,QAAQC,QAASd,GAAjD,kBAEAtC,EAAArC,EAAAsC,cAAA,oBAEAD,EAAArC,EAAAsC,cAACoD,EAAD,cArCU1B,aAkDZ2B,EAAqB,CACzBjB,aFE0B,WAC1B,sBAAAE,EAAA/E,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAuE,EAAOrE,GAAP,IAAAuB,EAAA,OAAA3B,EAAAC,EAAAI,KAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAnE,KAAA,EAAAmE,EAAAlE,KAAA,EAEgBqF,IAAMC,IAAI,uBAF1B,UAEGnE,EAFH+C,EAAAqB,KAGHC,QAAQC,IAAItE,GAEM,wBAAdA,EAAKA,KALN,CAAA+C,EAAAlE,KAAA,eAMDZ,EAAS,uBANR8E,EAAAwB,OAAA,iBAUH9F,EAAS,CACPK,KAAM,gBACNhB,OAAQkC,EAAKA,OAZZ+C,EAAAlE,KAAA,iBAAAkE,EAAAnE,KAAA,GAAAmE,EAAAyB,GAAAzB,EAAA,SAeH9E,EAAQ8E,EAAAyB,IAfL,yBAAAzB,EAAA/D,SAAA8D,EAAA,kBAAP,gBAAA2B,GAAA,OAAAvB,EAAAhE,MAAAC,KAAAC,YAAA,IEFAuD,aFsB0B,WAC1B,sBAAA+B,EAAAvG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA4E,EAAO1E,GAAP,IAAAuB,EAAA,OAAA3B,EAAAC,EAAAI,KAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,cAAAuE,EAAAxE,KAAA,EAAAwE,EAAAvE,KAAA,EAEgBqF,IAAMC,IAAI,mBAF1B,OAEGnE,EAFHoD,EAAAgB,KAIH3F,EAAS,CACPK,KAAM,iBACNhB,OAAQkC,EAAKA,OANZoD,EAAAvE,KAAA,gBAAAuE,EAAAxE,KAAA,EAAAwE,EAAAoB,GAAApB,EAAA,SASHnF,EAAQmF,EAAAoB,IATL,yBAAApB,EAAApE,SAAAmE,EAAA,iBAAP,gBAAAwB,GAAA,OAAAD,EAAAxF,MAAAC,KAAAC,YAAA,IEtBAkE,QFxBqB,WACrB,MAAO,CACLxE,KAAM,cE2BK8F,EAFMpC,YAZG,SAAClD,GACvB,MAAO,CACLtB,MAAOsB,EAAMU,KAAKhC,QAUwBiG,EAAzBzB,CAA6CE,mBC1D5DmC,EAAUC,YAAgB,CAC9B9E,KAAMX,IASO0F,EALDC,YACZH,EACAI,YAAgBC,MCJZC,EAAS,WACbC,IAASD,OACPxE,EAAArC,EAAAsC,cAACyE,EAAA,EAAD,CAAUN,MAAOA,GACfpE,EAAArC,EAAAsC,cAAC0E,EAAD,OAEFC,SAASC,eAAe,UAI5BL,IACAJ,EAAMU,UAAUN","file":"static/js/main.d03c05d6.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst initialState = { events: [], error: null, morot: [] };\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'SET_ALL_EVENTS':\n    return {\n      ...state,\n      events: action.events\n    };\n\n  case 'SET_NEW_EVENT':\n    return {\n      ...state,\n      events: [...state.events, action.events]\n    };\n\n  case 'SET_ERROR':\n    return {\n      ...state,\n      error: action.error\n    };\n\n  case 'ADD_MORO':\n    return {\n      ...state,\n      morot: [...state.morot, 'moro']\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport const addMoro = () => {\n  return {\n    type: 'ADD_MORO'\n  };\n};\n\nexport const setError = (error) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'SET_ERROR',\n      error\n    });\n\n    setTimeout(() => {\n      dispatch({\n        type: 'SET_ERROR',\n        error: null\n      }\n      );\n    }, 4000);\n  };\n};\n\n\nexport const fetchNewData = () => {\n  return async (dispatch) => {\n    try {\n      const data = await axios.get('/api/fetch_new_data');\n      console.log(data);\n\n      if (data.data === 'event already saved') {\n        setError('event already saved');\n        return;\n      }\n\n      dispatch({\n        type: 'SET_NEW_EVENT',\n        events: data.data\n      });\n    } catch (err) {\n      setError(err);\n    }\n  };\n};\n\nexport const getAllEvents = () => {\n  return async (dispatch) => {\n    try {\n      const data = await axios.get('/api/get_events');\n\n      dispatch({\n        type: 'SET_ALL_EVENTS',\n        events: data.data\n      });\n    } catch (err) {\n      setError(err);\n    }\n  };\n};\n\nexport default dataReducer;","import React, { Component } from 'react';\nimport ApexChart from 'react-apexcharts';\nimport { connect } from 'react-redux';\n\nclass Chart extends Component {\n  render() {\n    const options = {\n      title: {\n        text: 'Events',\n        align: 'center',\n        margin: 20,\n        style: {\n          fontSize:  '20px'\n        }\n      },\n      yaxis: {\n        seriesName: 'events',\n        axisTicks: {\n          show: true,\n        },\n        axisBorder: {\n          show: true,\n          color: '#662E9B',\n        },\n        labels: {\n          style: {\n            color: '#662E9B',\n          }\n        },\n        tooltip: {\n          enabled: true\n        }\n      },\n      // xaxis: {\n      //   axisTicks: {\n      //     show: true\n      //   },\n      //   tickPlacement: 'on'\n      // },\n      tooltip: {\n        fixed: {\n          enabled: true,\n          position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n          offsetY: 30,\n          offsetX: 60\n        },\n        // x: { formatter: (seriesName) => 'Year: ' + seriesName }\n      },\n      legend: {\n        position: 'top',\n        horizontalAlign: 'right',\n        offsetX: 40,\n        showForNullSeries: false,\n      }\n    };\n\n    const series = [\n      {\n        name: 'Sensor 1',\n        type: 'line',\n        data: (this.props.sensor1 ? this.props.sensor1.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 2',\n        type: 'line',\n        data: (this.props.sensor2 ? this.props.sensor2.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 3',\n        type: 'line',\n        data: (this.props.sensor3 ? this.props.sensor3.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 4',\n        type: 'line',\n        data: (this.props.sensor4 ? this.props.sensor4.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      }];\n\n    return (\n      <div>\n        <ApexChart options={options} series={series} type='line' width='700px' />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sensor1: state.data.events.map(e => {\n      return {\n        date: e.data.date,\n        data: e.data.sensor1\n      };\n    }),\n    sensor2: state.data.events.map(e => {\n      return {\n        date: e.data.date,\n        data: e.data.sensor2\n      };\n    }),\n    sensor3: state.data.events.map(e => {\n      return {\n        date: e.data.date,\n        data: e.data.sensor3\n      };\n    }),\n    sensor4: state.data.events.map(e => {\n      return {\n        date: e.data.date,\n        data: e.data.sensor4\n      };\n    })\n  };\n};\n\nconst ConnectedChart = connect(mapStateToProps)(Chart);\n\nexport default ConnectedChart;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { fetchNewData, getAllEvents, addMoro } from '../state/dataReducer';\nimport Chart from './Chart';\n\nclass App extends Component {\n\n  async componentDidMount() {\n    await this.props.getAllEvents();\n  }\n\n  render() {\n\n    // TODO: show errors\n\n    const handleFetchNewDataButtonClick = async () => {\n      this.props.fetchNewData();\n    };\n\n    const handleGetEventsButtonClick = async () => {\n      this.props.getAllEvents();\n    };\n\n    setInterval(() => {\n      this.props.addMoro();\n    }, 5000);\n    const list = (\n      <ul>\n        {this.props.morot.map((m,i) => (<li key={i}>{m}</li>))}\n      </ul>\n    );\n\n    return (\n      <div className='App'>\n        <h1>Moiccu</h1>\n        {list}\n\n        <Button className='fetch-new-event-button' variant='outlined' size='large' onClick={handleFetchNewDataButtonClick}>Fetch a new data point</Button>\n        <Button variant='outlined' size='large' onClick={handleGetEventsButtonClick}>Get all events</Button>\n\n        <h1>Charts</h1>\n\n        <Chart />\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    morot: state.data.morot\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchNewData,\n  getAllEvents,\n  addMoro\n};\n\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default ConnectedApp;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport dataReducer from './dataReducer';\n\nconst reducer = combineReducers({\n  data: dataReducer\n})\n\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'typeface-roboto';\nimport App from './components/App';\nimport store from './state/store';\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n};\n\nrender();\nstore.subscribe(render);"],"sourceRoot":""}