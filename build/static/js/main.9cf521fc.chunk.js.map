{"version":3,"sources":["state/dataReducer.js","utils/parser.js","components/Chart.js","components/App.js","state/store.js","index.js"],"names":["initialState","dataPoints","fetchTime","error","setError","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","type","setTimeout","stop","_x","apply","this","arguments","dataReducer","state","length","undefined","action","objectSpread","concat","toConsumableArray","Date","parseTime","date","day","getUTCDate","month","getMonth","year","getFullYear","hours","getHours","slice","minutes","getMinutes","Chart","options","title","text","align","margin","style","fontSize","yaxis","seriesName","axisTicks","show","axisBorder","color","labels","tooltip","enabled","xaxis","tickPlacement","formatter","value","fixed","position","offsetY","offsetX","legend","horizontalAlign","showForNullSeries","series","name","data","props","sensor1","map","s","x","y","sensor2","sensor3","sensor4","react_default","createElement","react_apexcharts_min_default","width","Component","ConnectedChart","connect","e","App","getAllDataPoints","setInterval","console","log","_this","fetchNewData","_this2","handleFetchNewDataButtonClick","_callee2","_context2","handleGetDataPointsButtonClick","_ref2","_callee3","_context3","className","Button_default","variant","size","onClick","components_Chart","mapDispatchToProps","resp","axios","get","sent","abrupt","t0","_x2","_ref3","d","_x3","ConnectedApp","reducer","combineReducers","store","createStore","applyMiddleware","thunk","render","ReactDOM","es","components_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.9cf521fc.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst initialState = { dataPoints: [], fetchTime: null, error: null };\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'SET_ALL_DATA_POINTS':\n    return {\n      ...state,\n      dataPoints: action.dataPoints\n    };\n\n  case 'SET_NEW_DATA_POINT':\n    return {\n      ...state,\n      dataPoints: [...state.dataPoints, action.dataPoints]\n    };\n\n  case 'SET_ERROR':\n    return {\n      ...state,\n      error: action.error\n    };\n\n  case 'SET_FETCH_TIME':\n    return {\n      ...state,\n      fetchTime: new Date()\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport const setError = (error) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'SET_ERROR',\n      error\n    });\n\n    setTimeout(() => {\n      dispatch({\n        type: 'SET_ERROR',\n        error: null\n      }\n      );\n    }, 4000);\n  };\n};\n\n\nexport const fetchNewData = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await axios.get('/api/fetch_new_data');\n\n      dispatch({\n        type: 'SET_FETCH_TIME'\n      });\n\n      if (resp.data === 'data point already saved') {\n        setError('data point already saved');\n        return;\n      }\n\n      dispatch({\n        type: 'SET_NEW_DATA_POINT',\n        dataPoints: resp.data.data // TODO: parsi date kivaan muotoon\n      });\n    } catch (err) {\n      setError(err);\n    }\n  };\n};\n\nexport const getAllDataPoints = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await axios.get('/api/get_data_points');\n\n      dispatch({\n        type: 'SET_ALL_DATA_POINTS',\n        dataPoints: resp.data.map(d => d.data)\n      });\n    } catch (err) {\n      setError(err);\n    }\n  };\n};\n\nexport default dataReducer;","export const parseTime = (date) => {\n  if (!date) {\n    return '';\n  }\n  const day = date.getUTCDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  const hours = ('0' + date.getHours()).slice(-2);\n  const minutes = ('0' + date.getMinutes()).slice(-2);\n\n  return `${day}.${month}.${year} ${hours}:${minutes}`;\n};","import React, { Component } from 'react';\nimport ApexChart from 'react-apexcharts';\nimport { connect } from 'react-redux';\nimport { parseTime } from '../utils/parser';\n\nclass Chart extends Component {\n  render() {\n    const options = {\n      title: {\n        text: 'Data Points',\n        align: 'center',\n        margin: 20,\n        style: {\n          fontSize:  '20px'\n        }\n      },\n      yaxis: {\n        seriesName: 'dataPoints',\n        axisTicks: {\n          show: true,\n        },\n        axisBorder: {\n          show: true,\n          color: '#662E9B',\n        },\n        labels: {\n          style: {\n            color: '#662E9B',\n          }\n        },\n        tooltip: {\n          enabled: true\n        }\n      },\n      xaxis: {\n        axisTicks: {\n          show: false\n        },\n        tickPlacement: 'on',\n        labels: {\n          formatter: (value) => {\n            if (typeof(value) === 'number') {\n              return value;\n            }\n            return parseTime(new Date(value));\n          }\n        }\n      },\n      tooltip: {\n        fixed: {\n          enabled: true,\n          position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n          offsetY: 30,\n          offsetX: 60\n        },\n        // x: { formatter: (seriesName) => 'Year: ' + seriesName }\n      },\n      legend: {\n        position: 'top',\n        horizontalAlign: 'right',\n        offsetX: 40,\n        showForNullSeries: false,\n      }\n    };\n\n    const series = [\n      {\n        name: 'Sensor 1',\n        type: 'line',\n        data: (this.props.sensor1 ? this.props.sensor1.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 2',\n        type: 'line',\n        data: (this.props.sensor2 ? this.props.sensor2.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 3',\n        type: 'line',\n        data: (this.props.sensor3 ? this.props.sensor3.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 4',\n        type: 'line',\n        data: (this.props.sensor4 ? this.props.sensor4.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      }];\n\n    return (\n      <div>\n        <ApexChart options={options} series={series} type='line' width='700px' />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sensor1: state.data.dataPoints.map(e => {\n      return {\n        date: e.date,\n        data: e.sensor1\n      };\n    }),\n    sensor2: state.data.dataPoints.map(e => {\n      return {\n        date: e.date,\n        data: e.sensor2\n      };\n    }),\n    sensor3: state.data.dataPoints.map(e => {\n      return {\n        date: e.date,\n        data: e.sensor3\n      };\n    }),\n    sensor4: state.data.dataPoints.map(e => {\n      return {\n        date: e.date,\n        data: e.sensor4\n      };\n    })\n  };\n};\n\nconst ConnectedChart = connect(mapStateToProps)(Chart);\n\nexport default ConnectedChart;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { fetchNewData, getAllDataPoints } from '../state/dataReducer';\nimport Chart from './Chart';\nimport { parseTime } from '../utils/parser';\n\nclass App extends Component {\n\n  async componentDidMount() {\n    await this.props.getAllDataPoints();\n\n    setInterval(() => {\n      console.log('fetching new data at', new Date());\n      this.props.fetchNewData();\n    }, 3600000);\n  }\n\n  render() {\n    const handleFetchNewDataButtonClick = async () => {\n      this.props.fetchNewData();\n    };\n\n    const handleGetDataPointsButtonClick = async () => {\n      this.props.getAllDataPoints();\n    };\n\n    return (\n      <div className='App'>\n        <h1>Data visualization</h1>\n\n        <p>This app fetches a new data point from a given api every hour and adds it to the chart.</p>\n\n        <p>Last data point was fetched at {parseTime(this.props.fetchTime)}.</p>\n\n        <p>These buttons are meant for developing:</p>\n        <Button variant='outlined' size='large' onClick={handleFetchNewDataButtonClick}>Fetch a new data point</Button>\n        <Button variant='outlined' size='large' onClick={handleGetDataPointsButtonClick}>Get all data points</Button>\n\n        <h1>Charts</h1>\n\n        <Chart />\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    fetchTime: state.data.fetchTime\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchNewData,\n  getAllDataPoints\n};\n\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default ConnectedApp;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport dataReducer from './dataReducer';\n\nconst reducer = combineReducers({\n  data: dataReducer\n});\n\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'typeface-roboto';\nimport App from './components/App';\nimport store from './state/store';\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n};\n\nrender();\nstore.subscribe(render);"],"sourceRoot":""}