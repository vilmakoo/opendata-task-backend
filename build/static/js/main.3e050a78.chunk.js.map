{"version":3,"sources":["state/dataReducer.js","utils/parser.js","components/Chart.js","components/App.js","state/store.js","index.js"],"names":["initialState","dataPoints","fetchTime","error","setError","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","type","setTimeout","stop","_x","apply","this","arguments","dataReducer","state","length","undefined","action","objectSpread","concat","toConsumableArray","Date","parseTime","date","day","getUTCDate","month","getMonth","year","getFullYear","hours","getHours","slice","minutes","getMinutes","Chart","options","yaxis","seriesName","axisTicks","show","axisBorder","color","labels","style","tooltip","enabled","xaxis","tickPlacement","formatter","value","fixed","position","offsetY","offsetX","legend","horizontalAlign","showForNullSeries","series","name","data","props","sensor1","map","s","x","y","sensor2","sensor3","sensor4","react_default","createElement","react_apexcharts_min_default","className","width","Component","ConnectedChart","connect","e","App","getAllDataPoints","setInterval","console","log","_this","fetchNewData","Fragment","CssBaseline_default","Typography_default","variant","gutterBottom","paragraph","Card_default","CardContent_default","components_Chart","mapDispatchToProps","_ref2","_callee2","resp","_context2","axios","get","sent","abrupt","t0","_x2","_ref3","_callee3","_context3","d","_x3","ConnectedApp","reducer","combineReducers","store","createStore","applyMiddleware","thunk","render","ReactDOM","es","components_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.3e050a78.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst initialState = { dataPoints: [], fetchTime: null, error: null };\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'SET_ALL_DATA_POINTS':\n    return {\n      ...state,\n      dataPoints: action.dataPoints\n    };\n\n  case 'SET_NEW_DATA_POINT':\n    return {\n      ...state,\n      dataPoints: [...state.dataPoints, action.dataPoints]\n    };\n\n  case 'SET_ERROR':\n    return {\n      ...state,\n      error: action.error\n    };\n\n  case 'SET_FETCH_TIME':\n    return {\n      ...state,\n      fetchTime: new Date()\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport const setError = (error) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'SET_ERROR',\n      error\n    });\n\n    setTimeout(() => {\n      dispatch({\n        type: 'SET_ERROR',\n        error: null\n      }\n      );\n    }, 4000);\n  };\n};\n\n\nexport const fetchNewData = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await axios.get('/api/fetch_new_data');\n\n      dispatch({\n        type: 'SET_FETCH_TIME'\n      });\n\n      if (resp.data === 'data point already saved') {\n        setError('data point already saved');\n        return;\n      }\n\n      dispatch({\n        type: 'SET_NEW_DATA_POINT',\n        dataPoints: resp.data.data // TODO: parsi date kivaan muotoon\n      });\n    } catch (err) {\n      setError(err);\n    }\n  };\n};\n\nexport const getAllDataPoints = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await axios.get('/api/get_data_points');\n\n      dispatch({\n        type: 'SET_FETCH_TIME'\n      });\n      dispatch({\n        type: 'SET_ALL_DATA_POINTS',\n        dataPoints: resp.data.map(d => d.data)\n      },);\n    } catch (err) {\n      setError(err);\n    }\n  };\n};\n\nexport default dataReducer;","export const parseTime = (date) => {\n  if (!date) {\n    return '';\n  }\n  const day = date.getUTCDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  const hours = ('0' + date.getHours()).slice(-2);\n  const minutes = ('0' + date.getMinutes()).slice(-2);\n\n  return `${day}.${month}.${year} ${hours}:${minutes}`;\n};","import React, { Component } from 'react';\nimport ApexChart from 'react-apexcharts';\nimport { connect } from 'react-redux';\nimport { parseTime } from '../utils/parser';\n\nclass Chart extends Component {\n  render() {\n    const options = {\n      yaxis: {\n        seriesName: 'dataPoints',\n        axisTicks: {\n          show: true,\n        },\n        axisBorder: {\n          show: true,\n          color: '#662E9B',\n        },\n        labels: {\n          style: {\n            color: '#662E9B',\n          }\n        },\n        tooltip: {\n          enabled: true\n        }\n      },\n      xaxis: {\n        axisTicks: {\n          show: false\n        },\n        tickPlacement: 'on',\n        labels: {\n          formatter: (value) => {\n            if (typeof(value) === 'number') {\n              return value;\n            }\n            return parseTime(new Date(value));\n          }\n        }\n      },\n      tooltip: {\n        fixed: {\n          enabled: true,\n          position: 'topLeft',\n          offsetY: 30,\n          offsetX: 60\n        },\n      },\n      legend: {\n        position: 'top',\n        horizontalAlign: 'left',\n        offsetX: 40,\n        showForNullSeries: false,\n      }\n    };\n\n    const series = [\n      {\n        name: 'Sensor 1',\n        type: 'line',\n        data: (this.props.sensor1 ? this.props.sensor1.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 2',\n        type: 'line',\n        data: (this.props.sensor2 ? this.props.sensor2.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 3',\n        type: 'line',\n        data: (this.props.sensor3 ? this.props.sensor3.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      },\n      {\n        name: 'Sensor 4',\n        type: 'line',\n        data: (this.props.sensor4 ? this.props.sensor4.map(s => {\n          return {\n            x: s.date,\n            y: s.data\n          };\n        }) : [])\n      }];\n\n    return (\n      <div>\n        <ApexChart className='chart' options={options} series={series} type='line' width='700px' />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sensor1: state.data.dataPoints.map(e => {\n      return {\n        date: e.date,\n        data: e.sensor1\n      };\n    }),\n    sensor2: state.data.dataPoints.map(e => {\n      return {\n        date: e.date,\n        data: e.sensor2\n      };\n    }),\n    sensor3: state.data.dataPoints.map(e => {\n      return {\n        date: e.date,\n        data: e.sensor3\n      };\n    }),\n    sensor4: state.data.dataPoints.map(e => {\n      return {\n        date: e.date,\n        data: e.sensor4\n      };\n    })\n  };\n};\n\nconst ConnectedChart = connect(mapStateToProps)(Chart);\n\nexport default ConnectedChart;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { fetchNewData, getAllDataPoints } from '../state/dataReducer';\nimport Chart from './Chart';\nimport { parseTime } from '../utils/parser';\n\nclass App extends Component {\n\n  async componentDidMount() {\n    await this.props.getAllDataPoints();\n\n    setInterval(() => {\n      console.log('fetching new data at', new Date());\n      this.props.fetchNewData();\n    }, 3600000);\n  }\n\n  render() {\n    // used for developing:\n    // const handleFetchNewDataButtonClick = async () => {\n    //   this.props.fetchNewData();\n    // };\n\n    // const handleGetDataPointsButtonClick = async () => {\n    //   this.props.getAllDataPoints();\n    // };\n\n    return (\n      <React.Fragment>\n        <CssBaseline>\n          <div className='app'>\n            <Typography variant='h1' color='primary' gutterBottom={true}>\n            Data visualization\n            </Typography>\n\n            <Typography variant='h4' paragraph color='textPrimary'>\n            This is an app that fetches a new data point<br />\n            from a given API every hour<br />\n            and visualizes the data in a chart.\n            </Typography>\n\n            {/* <p>These buttons are meant for developing:</p>\n            <Button variant='outlined' size='large' onClick={ handleFetchNewDataButtonClick }>Fetch a new data point</Button>\n            <Button variant='outlined' size='large' onClick={ handleGetDataPointsButtonClick }>Get all data points</Button> */}\n\n            <div className='chart-container'>\n              <Typography variant='h2' color='primary' gutterBottom={true}>\n            The Chart\n              </Typography>\n              <div className='fetch-time'>\n                <Typography paragraph className='fetch-time-p' color='textPrimary'>Last data point was fetched at:</Typography>\n                <Card className='fetch-time-card'>\n                  <CardContent className='fetch-time-content'>\n                    <Typography variant='subtitle2' color='textPrimary'>\n                      { parseTime(this.props.fetchTime) }\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n\n            <Chart />\n          </div>\n        </CssBaseline>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    fetchTime: state.data.fetchTime\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchNewData,\n  getAllDataPoints\n};\n\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default ConnectedApp;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport dataReducer from './dataReducer';\n\nconst reducer = combineReducers({\n  data: dataReducer\n});\n\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'typeface-roboto';\nimport App from './components/App';\nimport store from './state/store';\nimport './styles/index.scss';\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n};\n\nrender();\nstore.subscribe(render);"],"sourceRoot":""}